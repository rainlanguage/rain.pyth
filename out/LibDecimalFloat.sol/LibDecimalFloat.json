{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fbc03192635eb45edab1c5e50b1fba4669f1774d3b0b4ec50447009a526e903264736f6c63430008190033","sourceMap":"3994:27298:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fbc03192635eb45edab1c5e50b1fba4669f1774d3b0b4ec50447009a526e903264736f6c63430008190033","sourceMap":"3994:27298:24:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"LibDecimalFloat Floating point math library for Rainlang. Broadly implements decimal floating point math with 224 signed bits for the coefficient and 32 signed bits for the exponent. Notably the implementation differs from standard specifications in a few key areas: - There is no concept of NaN or Infinity. - There is no concept of rounding modes. - There is no negative zero. - This is a decimal floating point library, not binary. This means that operations such as divide by 0 will revert, rather than produce nonsense like NaN or Infinity. This is a deliberate design choice to make the library more predictable and easier to reason about as the basis of a defi native smart contract language. The reason that this is a decimal floating point system is that the inputs to the system as rainlang literals are decimal values. This means that `0.1` has an _exact_ representation in the system, rather than a repeating binary fraction. This technically results in less precision than a binary floating point system, but is much more predictable and easier to reason about in the context of financial inputs and outputs, which are typically all decimal values as understood by humans. However, consider that we have 127 bits of precision in the coefficient, which is far more than the 53 bits of a double precision floating point number regardless of binary/decimal considerations, and should be more than enough for most defi use cases. A typical defi fixed point value has 18 decimals, while a normalized decimal float in this system has 37 decimals. This means, for example, that we can represent the entire supply of any 18 decimal fixed point token amount up to 10 quintillion tokens, without any loss of precision. One use case for this number system is representing ratios of tokens that have both large differences in their decimals and unit value. For example, at the time of writing, 1 SHIB is worth about 2.7e-10 BTC while the WTBC contract only supports 8 decimals vs. SHIB's 18 decimals. It's literally not possible to represent a purchase of 1 SHIB (1e18) worth of WBTC, so it's easy to see how a fixed point decimal system could accidentally round something down to `0` or up to `1` or similarly bad precision loss, simply due to the large difference in OOMs in _representation_ of any two tokens being considered. Of course there are workarounds, such as temporarily inflating values during calculations and rescaling them afterwards, but they are ad-hoc and error prone. Importantly, the workarounds are typically not obvious to the target demographic of Rainlang, and it is not obvious where/when they need to be applied without rigourous testing/mathematical models that are beyond the scope of the typical user of Rainlang.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/rain.math.float/src/lib/LibDecimalFloat.sol\":\"LibDecimalFloat\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/\",\":ds-test/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/pyth-crosschain/lazer/contracts/evm/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":mut/=lib/rain.math.float/lib/rain.string/src/lib/mut/\",\":openzeppelin-contracts-upgradeable/=lib/pyth-crosschain/lazer/contracts/evm/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/\",\":openzeppelin/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/contracts/\",\":parse/=lib/rain.math.float/lib/rain.string/src/lib/parse/\",\":pyth-crosschain/=lib/pyth-crosschain/\",\":pyth-sdk/=lib/pyth-crosschain/target_chains/ethereum/sdk/solidity/\",\":rain.datacontract/=lib/rain.math.float/lib/rain.datacontract/src/\",\":rain.math.binary/=lib/rain.math.float/lib/rain.sol.codegen/lib/rain.math.binary/src/\",\":rain.math.fixedpoint/=lib/rain.math.float/lib/rain.math.fixedpoint/src/\",\":rain.math.float/=lib/rain.math.float/src/\",\":rain.math.saturating/=lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.sol.codegen/=lib/rain.math.float/lib/rain.sol.codegen/\",\":rain.solmem/=lib/rain.math.float/lib/rain.datacontract/lib/rain.solmem/src/\",\":rain.string/=lib/rain.math.float/lib/rain.string/src/\",\":solady/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/lib/solady/\",\":solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/rain.math.float/src/error/ErrDecimalFloat.sol\":{\"keccak256\":\"0x16b9438de4dd7836be550f6421a75a73d096ff2a78470d5c8c75ec58034493f6\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://2d5279ab84c66ebe6efb6f486638e9518193ec9b00d13f2a422ad1444bd2b8ea\",\"dweb:/ipfs/QmRD5cdTrSVjDYDRVRkrZh6gMZRBM32RBhd2gjeAaCD42R\"]},\"lib/rain.math.float/src/generated/LogTables.pointers.sol\":{\"keccak256\":\"0x7413509c3a12ac3e00a29e9ee1fd0ab41059b498d89f69bc67421ffc13324bc8\",\"license\":\"LicenseRef-DCL-1.0\",\"urls\":[\"bzz-raw://2703ac5107cd6b77460c2ba9947a77f73a1c085b09892634b0a7a20ee362f6b3\",\"dweb:/ipfs/QmYpguYCKQGLrRB2RuRnJccw42fe51zKNkXrBsGmdaANSn\"]},\"lib/rain.math.float/src/lib/LibDecimalFloat.sol\":{\"keccak256\":\"0xc725dbb68f6c0f480cc5eb3bb2ef606c35eff2ac11bc286787ef8aeb7e52b6ba\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://697e28a70be1c06be715d3f1d1e943f6c840c4fce32c963c19a773143be21bd8\",\"dweb:/ipfs/QmPmVmzTxh5sbi2ksnpUqaS63AQNDetZ4QbVeMtzk5wUGB\"]},\"lib/rain.math.float/src/lib/implementation/LibDecimalFloatImplementation.sol\":{\"keccak256\":\"0x9a784b00368e72bac4b86125c20a75c55f6c327a19010975491eb390e96ad36b\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://01d961c3190fd1c2d9299ef9cd4562d1d4b2b01e6877e92b0f592e9ca2d3ffb5\",\"dweb:/ipfs/QmS9ucuEWFP8SjQNgCqG9cJPSmU64vKo28GmtQJx7G3yzG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/","ds-test/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/pyth-crosschain/lazer/contracts/evm/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","mut/=lib/rain.math.float/lib/rain.string/src/lib/mut/","openzeppelin-contracts-upgradeable/=lib/pyth-crosschain/lazer/contracts/evm/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/","openzeppelin/=lib/rain.math.float/lib/rain.string/lib/openzeppelin-contracts/contracts/","parse/=lib/rain.math.float/lib/rain.string/src/lib/parse/","pyth-crosschain/=lib/pyth-crosschain/","pyth-sdk/=lib/pyth-crosschain/target_chains/ethereum/sdk/solidity/","rain.datacontract/=lib/rain.math.float/lib/rain.datacontract/src/","rain.math.binary/=lib/rain.math.float/lib/rain.sol.codegen/lib/rain.math.binary/src/","rain.math.fixedpoint/=lib/rain.math.float/lib/rain.math.fixedpoint/src/","rain.math.float/=lib/rain.math.float/src/","rain.math.saturating/=lib/rain.math.float/lib/rain.math.fixedpoint/lib/rain.math.saturating/src/","rain.sol.codegen/=lib/rain.math.float/lib/rain.sol.codegen/","rain.solmem/=lib/rain.math.float/lib/rain.datacontract/lib/rain.solmem/src/","rain.string/=lib/rain.math.float/lib/rain.string/src/","solady/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/lib/solady/","solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/rain.math.float/src/lib/LibDecimalFloat.sol":"LibDecimalFloat"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/rain.math.float/src/error/ErrDecimalFloat.sol":{"keccak256":"0x16b9438de4dd7836be550f6421a75a73d096ff2a78470d5c8c75ec58034493f6","urls":["bzz-raw://2d5279ab84c66ebe6efb6f486638e9518193ec9b00d13f2a422ad1444bd2b8ea","dweb:/ipfs/QmRD5cdTrSVjDYDRVRkrZh6gMZRBM32RBhd2gjeAaCD42R"],"license":"LicenseRef-DCL-1.0"},"lib/rain.math.float/src/generated/LogTables.pointers.sol":{"keccak256":"0x7413509c3a12ac3e00a29e9ee1fd0ab41059b498d89f69bc67421ffc13324bc8","urls":["bzz-raw://2703ac5107cd6b77460c2ba9947a77f73a1c085b09892634b0a7a20ee362f6b3","dweb:/ipfs/QmYpguYCKQGLrRB2RuRnJccw42fe51zKNkXrBsGmdaANSn"],"license":"LicenseRef-DCL-1.0"},"lib/rain.math.float/src/lib/LibDecimalFloat.sol":{"keccak256":"0xc725dbb68f6c0f480cc5eb3bb2ef606c35eff2ac11bc286787ef8aeb7e52b6ba","urls":["bzz-raw://697e28a70be1c06be715d3f1d1e943f6c840c4fce32c963c19a773143be21bd8","dweb:/ipfs/QmPmVmzTxh5sbi2ksnpUqaS63AQNDetZ4QbVeMtzk5wUGB"],"license":"CAL"},"lib/rain.math.float/src/lib/implementation/LibDecimalFloatImplementation.sol":{"keccak256":"0x9a784b00368e72bac4b86125c20a75c55f6c327a19010975491eb390e96ad36b","urls":["bzz-raw://01d961c3190fd1c2d9299ef9cd4562d1d4b2b01e6877e92b0f592e9ca2d3ffb5","dweb:/ipfs/QmS9ucuEWFP8SjQNgCqG9cJPSmU64vKo28GmtQJx7G3yzG"],"license":"CAL"}},"version":1},"id":24}